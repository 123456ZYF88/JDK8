<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>JDK8</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>JDK8</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <springcontext.version>5.3.20</springcontext.version>
        <hutool.version>5.7.3</hutool.version>
        <junit.version>4.13.1</junit.version>
        <junit-jupiter.version>5.11.0-M2</junit-jupiter.version>
        <lombok.vesion>1.18.34</lombok.vesion>
        <json-lib.verions>2.4</json-lib.verions>
        <fastjson2.version>2.0.50</fastjson2.version>
        <fastjson.verion> 2.0.0</fastjson.verion>
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <org.jsoup.version>1.19.1</org.jsoup.version>
        <com.google.guava.version>32.0.0-android</com.google.guava.version>
        <org.apache.poi.version>5.1.0</org.apache.poi.version>
        <io.swagger.version>1.5.13</io.swagger.version>
        <com.fasterxml.jackson.core.version>2.15.4</com.fasterxml.jackson.core.version>
        <org.apache.httpcomponents.client5.version>5.4.2</org.apache.httpcomponents.client5.version>
        <org.apache.httpcomponents.client.version>4.5.14</org.apache.httpcomponents.client.version>
    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${springcontext.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${springcontext.version}</version>
        </dependency>
        <dependency>
            <!-- junit 和 junit.jupiter 是 JUnit 框架的不同版本的命名空间。
            junit是老版本的
            JUnit：这是一个较旧的版本，通常指的是 JUnit 4 或更早的版本。在 JUnit 4 中，测试方法使用 @Test 注解标记
                    ，并且可能还使用了其他注解如 @Before, @After, @Ignore 等。这些注解定义在 org.junit 包下。
            JUnit Jupiter：这是 JUnit 5 的核心组件之一，代表了 JUnit 5 的测试引擎和 API。
                在 JUnit 5 中，为了提供更好的与 Java 8 及更高版本的兼容性以及更多的功能，引入了新的注解和特性。
                JUnit Jupiter 的注解和类位于 org.junit.jupiter.api 包下，例如 @Test, @BeforeEach, @AfterEach, @ParameterizedTest 等。
                -->
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.vesion}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <!-- https://mvnrepository.com/artifact/net.sf.json-lib/json-lib -->
            <!--Json字符串解析包-->
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>${json-lib.verions}</version>
            <classifier>jdk15</classifier><!--需要添加的一句话-->
        </dependency>
        <dependency>
            <!--json操作包 -->
            <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.verion}</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${org.jsoup.version}</version>
        </dependency>
        <!--Hutool 是一个非常强大且实用的工具库，值得在 Java 项目中广泛使用。-->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version> <!-- 根据最新版本进行更新 -->
        </dependency>
        <!--memcached ：是一个自由开源的，高性能，分布式内存对象缓存系统。-->
        <!-- https://mvnrepository.com/artifact/com.whalin/Memcached-Java-Client -->
        <dependency>
            <groupId>com.whalin</groupId>
            <artifactId>Memcached-Java-Client</artifactId>
            <version>3.0.2</version>
        </dependency>
        <!--标准的 Java 库未能提供足够的方法来操作其核心类，Apache-commons-lang 提供了许多辅助工具，特别是字符串操作方法、基本数值方法、对象反射、并发、
        对象创建和序列化以及系统属性。此外，它还包含了对 java.util 的基本增强功能，日期和一系列的实用工具。
        commons-lang 有两个主要版本，lang 和 lang3。lang 是早前版本，于 2002 年发布，而 lang3 是第三个大版本，摒弃了一些弱和旧的特性，不再兼容 lang，
        包名也更新为 lang3，现在使用主要以 lang3 为主 。
         -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
            <optional>true</optional>
        </dependency>
        <!-- Guava工程包含了若干被Google的 Java项目广泛依赖 的核心库  -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${com.google.guava.version}</version>
            <optional>true</optional>
        </dependency>
        <!--Apache POI 是一种流行的API,可以使用Java读写MS Excel文件，可以使用Java读写MS Word和MS PowerPoint文件。-->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${org.apache.poi.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
         <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${io.swagger.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${com.fasterxml.jackson.core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${com.fasterxml.jackson.core.version}</version>
        </dependency>

        <!--Relocated → org.apache.httpcomponents.client5 » httpclient5 -->
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5 -->
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
            <version>${org.apache.httpcomponents.client5.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${org.apache.httpcomponents.client.version}</version>
        </dependency>


            <!--  htmlUtils-->
        <dependency>
            <groupId>org.xhtmlrenderer</groupId>
            <artifactId>flying-saucer-core</artifactId>
            <version>9.1.22</version> <!-- 最新稳定版 -->
        </dependency>


    </dependencies>

    <build>
        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
<!--            ：mvn site项目信息生成
                不需要   <plugin>-->
<!--                    <groupId>org.apache.maven.plugins</groupId>-->
<!--                    <artifactId>maven-project-info-reports-plugin</artifactId>-->
<!--                    <version>3.0.0</version>-->
<!--                </plugin>-->
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
